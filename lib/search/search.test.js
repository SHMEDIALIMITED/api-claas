'use strict';
// tests for search
// Generated by serverless-mocha-plugin

const mod         = require('../index');
const mochaPlugin = require('serverless-mocha-plugin');
const wrapper     = mochaPlugin.lambdaWrapper;
const expect      = mochaPlugin.chai.expect;
const fixtures    = require('./search.fixtures');

const liveFunction = {
  region: process.env.SERVERLESS_REGION,
  lambdaFunction: process.env.SERVERLESS_PROJECT + '-search'
}

describe('search', () => {
  before(function (done) {
//  wrapper.init(liveFunction); // Run the deployed lambda
    wrapper.init(mod, {
      handler: 'search'
    });

    done()
  })

  describe('Passing invalid POST body', function() {
    fixtures.invalid.forEach(function(event, i) {
      it('results in 400 with implementing error schema (' + i + ')', function(done) {
        wrapper.run(event, (err, response) => {
          expect(err).not.to.be.null;
          expect(response).to.be.null;
          done();
        });
      });
    });
  });
});
